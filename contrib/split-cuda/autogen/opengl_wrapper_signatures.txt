/// log
void glBegin(GLenum mode);

/// log
void glCallList(GLuint list);

/// log
void glClear(GLbitfield mask);

/// log
void glEnable(GLenum cap);

/// log
void glEnd();

/// log
void glEndList();

/// log
void glFrustum( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble nearVal, GLdouble farVal);

// For glGenLists, we probably need to reimplement the list id allocator.
/// log
GLuint glGenLists( GLsizei range);

/// log
/// arg params buf_length 3
void glLightfv( GLenum light, GLenum pname, const GLfloat * params);

void glLoadIdentity(void);

/// log
/// arg params buf_length 3
void glMaterialfv(GLenum face, GLenum pname, const GLfloat * params);

/// log
void glMatrixMode(GLenum mode);

/// log
void glNewList(GLuint list, GLenum mode);

/// log
void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);

/// log
void glPushMatrix(void);

/// log
void glPopMatrix(void);

/// log
void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);

/// log
void glShadeModel(GLenum mode);

/// log
void glTranslatef(GLfloat x, GLfloat y, GLfloat z);

/// log
void glVertex3f(GLfloat x, GLfloat y, GLfloat z);

/// log
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);

/// log
void glDrawBuffer( 	GLenum buf);

/// log
void glTranslated(GLdouble x,  GLdouble y,  GLdouble z);

/// log
void glDeleteLists(GLuint list,  GLsizei range);

const GLubyte *glGetString( 	GLenum name);

// genType sin( 	genType angle);
// genType cos( 	genType angle);
// genType sqrt( 	genType x);

XVisualInfo* glXChooseVisual(Display * dpy,  int screen,  int * attribList);
GLXContext glXCreateContext(Display * dpy,  XVisualInfo * vis,  GLXContext shareList,  Bool direct);
void glXDestroyContext(Display * dpy,  GLXContext ctx);
void glXQueryDrawable(Display * dpy,  GLXDrawable draw,  int attribute,  unsigned int * value);
const char * glXQueryExtensionsString(Display * dpy,  int screen);

void glXSwapBuffers(Display * dpy,  GLXDrawable drawable);
Bool glXMakeCurrent(Display * dpy,  GLXDrawable drawable,  GLXContext ctx);

KeySym XLookupKeysym(XKeyEvent *key_event, int index);
int XFree(void *data);

Colormap XCreateColormap(
      Display *display,
      Window w,
      Visual *visual,
      int alloc
);
Window XCreateWindow(
      Display *display,
      Window parent,
      int x,
      int y,
      unsigned int width,
      unsigned int height,
      unsigned int border_width,
      int depth,
      unsigned int cls,
      Visual *visual,
      unsigned long valuemask,
      XSetWindowAttributes *attributes
);


int XLookupString(
      XKeyEvent *event_struct,
      char *buffer_return,
      int bytes_buffer,
      KeySym *keysym_return,
      XComposeStatus *status_in_out
);
int XMapWindow(
      Display *display,
      Window w
);
int XNextEvent(
      Display *display,
      XEvent *event_return
);
Display *XOpenDisplay(
      const char *display_name
);
int XPending(
      Display *display
);
int XSetNormalHints(
      Display *display,
      Window w,
      XSizeHints *hints
);
int XSetStandardProperties(
      Display *display,
      Window w,
      const char *window_name,
      const char *icon_name,
      Pixmap icon_pixmap,
      char **argv,
      int argc,
      XSizeHints *hints
);

Atom XInternAtom(
      Display *display,
      const char *atom_name,
      Bool only_if_exists
);

int XChangeProperty(
      Display *display,
      Window w,
      Atom property,
      Atom type,
      int format,
      int mode,
      const unsigned char *data,
      int nelements
);

int XDestroyWindow(
      Display *display,
      Window w,
);

int XCloseDisplay(
      Display *display,
);

int XParseGeometry(
      const char *parsestring,
      int *x_return,
      int *y_return,
      unsigned int *width_return,
      unsigned int *height_return
);